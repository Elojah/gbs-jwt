syntax = "proto3";

package grpc;

option (gogoproto.testgen_all)  = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.goproto_registration) = true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "google/protobuf/empty.proto";

import "github.com/elojah/gbs-jwt/pkg/jwt/jwt.proto";

service Secrets {
    // Create a new Secret
    // The claims provided in the Secret will be added into the jwt token.
    // If provided, the "exp" claim overrides the one assigned by default. If not, the token is
    // given the service's default validity period.
    rpc Create(jwt.Secret) returns (jwt.Secret) {}

    // Update a new Secret.
    // If provided, the jwt's claims are updated.
    // If no "exp" claim is provided, the secret is renewed with the service's default validity period.
    rpc Update(jwt.Secret) returns (jwt.Secret) {}

    // Delete a secret with given name.
    // Claims are ignored.
    rpc Delete(jwt.Secret) returns (google.protobuf.Empty) {}

    // List all existing secrets.
    rpc List(google.protobuf.Empty) returns (jwt.SecretList) {}

    // Refresh all existing secrets with updated default expiration date.
    rpc Refresh(google.protobuf.Empty) returns (jwt.SecretList) {}
}
